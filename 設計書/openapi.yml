openapi: 3.0.3
info:
  title: Share Docs Pub - OpenAPI 3.0
  description: |
    -  文書管理APIエンドポイント
        -  文書と文書属性の登録
        -  文書属性による文書の検索
            以下の検索条件を組み合わせて検索するものとする
            結果に文書ファイルは含まず文書属性を返す
              -  指定したキーと値の一致
              -  指定したキーの値が指定した値の範囲に含まれるか
        -  文書ファイルの更新
        -  文書属性の更新
        -  文書ファイルの取得
        -  文書の削除
    -  文書ファイルは1ファイルあたり最大1GBまでのPDF/Word/Excel/Image/Videoとする
    -  Webアプリケーションが使用できるメモリ量は100MBまでとする
    -  文書の属性は任意のキー(英数字)と値で設定することができる
    -  文書にはそれぞれ一意なキーやURLが割り振られ、外部システムで利用可能であること
    -  当APIは外部へ公開し任意の利用者がいる想定とする

  # termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.00
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
  - url: https://localhost/api/v1/
tags:
  - name: 文書
    description: 文書の新規登録、検索、削除
  - name: 文書の属性
    description: 文書属性の更新
  - name: 文書ファイル
    description: 文書ファイルの取得、ファイルの更新
paths:
  /documents:
    post:
      tags:
        - 文書
      summary: 文書の登録
      description: |
        |対応するファイルの種類|
        |-|
        |PDF/Word/Excel/Image/Video|

        |保存ディレクトリ名|ドキュメントタイプ<br>(documents.document_type)|
        |-|-|
        |/pdf/|pdf|
        |/word/|word|
        |/excel/|excel|
        |/image/|image|
        |/video/|video|

        |入力チェック|status|message|
        |-|-|-|
        |・"file"のキー名は必須|400|入力値が不正です|
        |・"file"のキー名、は1つのみとする|↑|↑|
        |・文書の属性は必須入力ではない|↑|↑|
        |・文書の属性のkeyとvalueはセットで入力されていること|↑|↑|
        |・入力されたファイルは、対応したmime_typeであること|↑|↑|
        |・"file"以外のキー名は、文書の属性として扱う|↑|↑|

        |ファイルの扱い|例|
        |-|-|
        |・mime_typeの種類で、<br>ファイルタイプを特定し保存する|pdf/word/excel/image/movie|
        |・保存するディレクトリは、<br>ドキュメントタイプで区切って保存すること|/pdf/josdjXd9-skdjsi.pdf|
        |・保存するファイルのファイル名は、<br>重複しないようにuuidを生成してファイル名として管理する|36桁のuuidを生成する|
        |・保存するファイルの拡張子も上記と同時に保存する|pdf/word/excel/image/movie|
        |・元のファイル名はDBで保存すること|API開発仕様書|

        |登録後|
        |-|
        |・登録後のレスポンスは、登録した内容を出力すること|

        |例外処理|
        |-|
        |・例外種類に応じて、Response例の通りに返すこと|
        |・また、例外が発生した場合はログを残すこと|
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                key(任意):
                  description: |
                    key: valueのセットで入力されていること
                    <br>入力例：

                    `"title": "API基本設計仕様書"`
                  type: string
                  additionalProperties: true
              required: ["file"]
              example:
                key: api
      responses:
        "200":
          $ref: "#/components/responses/register"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "500":
          $ref: "#/components/responses/500"
  /documents/?key=value:
    get:
      tags:
        - 文書
      summary: 文書属性を取得
      description: |
        |入力チェック|status|message|
        |-|-|-|
        |・文書の属性のkeyが一致すること|400|入力値が不正です|
        |・文書の属性のkeyとvalueが必須|↑|↑|
        |・文書の属性のkeyが一致した場合、<br>そのkeyのvalueと一致するか(部分一致)|↑|↑|

        |検索して合致した場合|
        |-|
        |・文書番号はファイル保存時に生成したuuidを使用する|
        |・文書属性は、登録した分だけ出力する|

        |例外処理|
        |-|
        |・例外種類に応じて、Response例の通りに返すこと|
        |・また、例外が発生した場合はログを残すこと|
      parameters:
        - in: query
          name: key
          schema:
            type: string
          required: true
          description: クエリのキーと値をセットで検索する
          example: ?title=音楽
      responses:
        "200":
          $ref: "#/components/responses/documents_detail"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "500":
          $ref: "#/components/responses/500"
  /documents/{document_number}:
    delete:
      tags:
        - 文書
      summary: 文書の削除
      description: |
        |入力チェック|status|message|
        |-|-|-|
        |・文書番号が一致していること(完全一致)|400|入力値が不正です|

        |例外処理|
        |-|
        |・例外種類に応じて、Response例の通りに返すこと|
        |・また、例外が発生した場合はログを残すこと|
      parameters:
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "204":
          description: 成功
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "500":
          $ref: "#/components/responses/500"
  /documents/{document_number}/attributes:
    patch:
      tags:
        - 文書の属性
      summary: 文書属性の更新
      description: |
        |入力チェック|status|message|
        |-|-|-|
        |・必須のチェック|400|入力値が不正です|
        |・文書番号が一致していること(完全一致)|↑|↑|
        |・文書属性のkeyとvalueはセットで入力されていること|↑|↑|

        |登録時|
        |-|
        |・文書番号が一致したとき、入力された文書の属性のkeyが存在していればその値を更新する|

        |登録後|
        |-|
        |・文書属性は登録されている分を出力すること|

        |例外処理|
        |-|
        |・例外種類に応じて、Response例の通りに返すこと|
        |・また、例外が発生した場合はログを残すこと|
      parameters:
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      requestBody:
        description: 更新する属性
        $ref: "#/components/responses/attributes"
      responses:
        "200":
          $ref: "#/components/responses/documents_detail"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "500":
          $ref: "#/components/responses/500"
  /documents/{document_number}/file:
    get:
      tags:
        - 文書ファイル
      summary: 文書のダウンロード
      description: |
        |入力チェック|status|message|
        |-|-|-|
        |・文書番号が一致していること(完全一致)|400|入力値が不正です|

        |例外処理|
        |-|
        |・例外種類に応じて、Response例の通りに返すこと|
        |・また、例外が発生した場合はログを残すこと|
      parameters:
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "200":
          description: 成功
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "500":
          $ref: "#/components/responses/500"
    patch:
      tags:
        - 文書ファイル
      summary: 文書の更新
      description: |
        |入力チェック|status|message|
        |-|-|-|
        |・"file"のキー名は必須|400|入力値が不正です|
        |・"file"のキー名、は1つのみとする|↑|↑|
        |・文書番号が一致していること(完全一致)|↑|↑|
        |・登録しているファイルの拡張子と一致していること|↑|↑|

        |登録後|
        |-|
        |・レスポンスは、更新した内容を出力すること|
        |・文書の属性は登録されている全てを出力すること|

        |例外処理|
        |-|
        |・例外種類に応じて、Response例の通りに返すこと|
        |・また、例外が発生した場合はログを残すこと|
      parameters:
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      requestBody:
        description: 更新するファイル
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required: ["file"]
      responses:
        "200":
          $ref: "#/components/responses/register"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "500":
          $ref: "#/components/responses/500"
components:
  schemas:
    documents:
      properties:
        id:
          type: integer
          description: 文書id
        document_type:
          type: string
          description: 文書タイプ
        document_number:
          type: string
          description: 文書番号
        document_name:
          type: string
          description: 文書名
        document_extension:
          type: string
          description: 文書の拡張子
        created_at:
          type: string
          format: date-time
          description: 作成日
        updated_at:
          type: string
          format: date-time
          description: 更新日時
    attributes:
      properties:
        id:
          type: integer
        document_id:
          type: integer
        key:
          type: string
        value:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  responses:
    register:
      description: ファイル登録時のレスポンス
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 200
              document_type:
                type: string
                example: pdf
              document_number:
                type: string
                example: dku7sjdjosUsdj89
              document_name:
                type: string
                example: specification_api
              attributes:
                type: object
                properties:
                  title:
                    type: string
                    example: API設計仕様書
                  note:
                    type: string
                    example: ドキュメント管理のAPI設計書
    serach_item:
      description: 検索時の返却
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 200
              document_name:
                type: string
                example: specification_api.pdf
              document_key:
                type: integer
                example: 1
              document_number:
                type: string
              optionals:
                type: object
                properties:
                  attributes:
                    type: object
                    properties:
                      title:
                        type: string
                        example: none | api
                      optional_value:
                        type: string
                        example: none | developer
    attributes:
      description: 文書の属性
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                example: api
              note:
                type: string
                example: API設計仕様書
    documents_detail:
      description: 文書の属性
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 200
              document_type:
                type: string
                example: pdf
              document_number:
                type: string
                example: dku7sjdjosUsdj89
              document_name:
                type: string
                example: specification_api.pdf
              attributes:
                type: object
                properties:
                  title:
                    type: string
                    example: 公開作業手順書
                  note:
                    type: string
                    example: Web公開手順
                  created:
                    type: string
                    example: 2022.03.04
                  updated:
                    type: string
                    example: 2023.01.12
    400:
      description: ファイル登録時のレスポンス
      content:
        application/json:
          schema:
            properties:
              status_code:
                example: 400
              message:
                example: 入力値が不正です
    404:
      description: ファイル登録時のレスポンス
      content:
        application/json:
          schema:
            properties:
              status_code:
                example: 404
              message:
                example: アクセス方法を再度確認してください
    405:
      description: ファイル登録時のレスポンス
      content:
        application/json:
          schema:
            properties:
              status_code:
                example: 405
              message:
                example: アクセス方法を再度確認してください
    500:
      description: ファイル登録時のレスポンス
      content:
        application/json:
          schema:
            properties:
              status_code:
                example: 500
              message:
                example: サーバーでエラーが発生しました
