openapi: 3.0.3
info:
  title: Web API document manager - OpenAPI 3.0
  description: |
    -  文書管理APIエンドポイント
        -  文書と文書属性の登録
        -  文書属性による文書の検索
            以下の検索条件を組み合わせて検索するものとする
            結果に文書ファイルは含まず文書属性を返す
              -  指定したキーと値の一致
              -  指定したキーの値が指定した値の範囲に含まれるか
        -  文書ファイルの更新
        -  文書属性の更新
        -  文書ファイルの取得
        -  文書の削除
    -  文書ファイルは1ファイルあたり最大1GBまでのPDF/Word/Excel/Image/Videoとする
    -  Webアプリケーションが使用できるメモリ量は100MBまでとする
    -  文書の属性は任意のキー(英数字)と値で設定することができる
    -  文書にはそれぞれ一意なキーやURLが割り振られ、外部システムで利用可能であること
    -  当APIは外部へ公開し任意の利用者がいる想定とする

  # termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.00
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
  - url: https://localhost/api/v1/
tags:
  - name: 文書
    description: 新規登録、検索、更新(属性、ファイル入れ替え)、取得、削除
  - name: 文書の属性
    description: 検索、属性の更新
  - name: 文書ファイル
    description: ファイルの取得、ファイルの更新
paths:
  /documents:
    post:
      tags:
        - 文書
      summary: 文書の登録
      description: |
        入力チェック
        - ファイルは必須であること
        - 文書属性のkeyとvalueはセットで入力されていること(片方だけ入力はなし)
        - 対応したmime_typeであること
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        ファイルの扱い
        - mime_typeのチェックから、ファイルタイプを特定し保存する
        - 保存するディレクトリは、ドキュメントのタイプで区切って保存すること
          - 例： /pdf/api_公開用設計書.pdf

        登録後
        - レスポンスは、登録した内容を出力すること
        - ドキュメントNoは必ず暗号化して出力すること

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                optional_key:
                  type: string
                  example: api
                optional_access_value:
                  type: string
              required: ["file"]
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/register"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /documents/?key=value:
    get:
      tags:
        - 文書
      summary: 文書属性(ファイル名、説明文)を取得
      description: |
        入力チェック
        - 文書属性のキーとバリューが必須であること
        - 検索キーが一致すること
        - キーが一致していれば、そのキーに合う検索値と照合して一致するか(部分一致)
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 200
            - message: 検索した結果、文書がみつかりませんでした

        検索して合致した場合
        - ドキュメントNoは必ず暗号化して出力すること
        - 文書属性は、登録した分だけ出力する

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: optional_key
          schema:
            type: string
          required: true
          description: 検索キー
        - in: path
          name: optional_value
          schema:
            type: integer
          required: true
          description: 検索値
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/documents_detail"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /documents/file/{document_number}:
    get:
      tags:
        - 文書ファイル
      summary: 文書のダウンロード
      description: |
        入力チェック
        - ドキュメントnumberが一致していること(完全一致)
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: document_key
          schema:
            type: string
          required: true
          description: 各文書のキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
    put:
      tags:
        - 文書ファイル
      summary: 文書の更新
      description: |
        入力チェック
        - ファイルは必須であること
        - ドキュメントnumberが一致していること(完全一致)
        - 登録しているファイルの拡張子と一致していること
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        登録後
        - レスポンスは、登録した内容を出力すること
        - ドキュメントNoは必ず暗号化して出力すること
        - 文書属性は登録されている分を出力すること

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: document_key
          schema:
            type: string
          required: true
          description: 各文書のキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      requestBody:
        description: 更新するファイル
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required: ["file"]
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/register"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /documents/attributes/{document_number}:
    patch:
      tags:
        - 文書の属性
      summary: 文書属性の更新
      description: |
        入力チェック
        - 必須のチェック
        - ドキュメントnumberが一致していること(完全一致)
        - 文書属性のkeyとvalueはセットで入力されていること
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        登録時
        - ドキュメントnumberが一致したとき、入力された属性のキーが存在していればその値を更新する

        登録後
        - 文書属性は登録されている分を出力すること

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: document_key
          schema:
            type: string
          required: true
          description: 各文書のキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      requestBody:
        description: 更新する属性
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/optionals"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/documents_detail"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /documents/{document_number}:
    delete:
      tags:
        - 文書
      summary: 文書の削除
      description: |
        入力チェック
        - ドキュメントkeyとnumberが一致していること(完全一致)
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: document_key
          schema:
            type: string
          required: true
          description: 各文書のキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/deleted"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
components:
  schemas:
    register:
      description: ファイル登録時のレスポンス
      properties:
        status_code:
          type: integer
          example: 200
        document_type:
          type: string
          example: pdf
        document_key:
          type: string
          example: pdf_doc
        document_number:
          type: string
          example: dku7sjdjosUsdj89
        document_name:
          type: string
          example: specification_api.pdf
        optionals:
          type: object
          properties:
            optional_key:
              type: string
              example: none | api
            optional_value:
              type: string
              example: none | developer
    serach_item:
      description: 検索時の返却
      type: object
      properties:
        status_code:
          type: integer
          example: 200
        document_name:
          type: string
          example: specification_api.pdf
        document_key:
          type: integer
          example: 1
        document_number:
          type: string
        optionals:
          type: object
          properties:
            0:
              type: object
              properties:
                optional_key:
                  type: string
                  example: none | api
                optional_value:
                  type: string
                  example: none | developer
            1:
              type: object
              properties:
                optional_key:
                  type: string
                  example: none | api
                optional_value:
                  type: string
                  example: none | developer
    optionals:
      description: 文書属性
      properties:
        optionals:
          type: object
          properties:
            0:
              type: object
              properties:
                optional_key:
                  type: string
                  example: api
                optional_value:
                  type: string
                  example: developer
            1:
              type: object
              properties:
                optional_key:
                  type: string
                  example: title
                optional_value:
                  type: string
                  example: web_api
    documents_detail:
      description: 文書の属性
      properties:
        status_code:
          type: integer
          example: 200
        items:
          type: object
          properties:
            document_type:
              type: string
              example: pdf
            document_number:
              type: string
              example: dku7sjdjosUsdj89
            document_name:
              type: string
              example: specification_api.pdf
            optionals:
              type: object
              properties:
                0:
                  type: object
                  properties:
                    optional_key:
                      type: string
                      example: none | api
                    optional_value:
                      type: string
                      example: none | developer
                1:
                  type: object
                  properties:
                    optional_key:
                      type: string
                      example: none | title
                    optional_value:
                      type: string
                      example: none | web_api_development
    deleted:
      description: 削除した文書
      properties:
        document_type:
          type: string
          example: pdf
        document_number:
          type: string
          example: dku7sjdjosUsdj89
        document_name:
          type: string
          example: specification_api.pdf
    400:
      description: Invalid ID supplied
      properties:
        status_code:
          type: integer
          example: 400
        message:
          type: string
          example: 入力値が不正です
    404:
      description: Documents not found
      properties:
        status_code:
          type: integer
          example: 404
        message:
          type: string
          example: アクセス方法を再度確認してください
    405:
      description: Validation exception
      properties:
        status_code:
          type: integer
          example: 405
        message:
          type: string
          example: アクセス方法を再度確認してください
    500:
      description: 500用レスポンス
      properties:
        status_code:
          type: integer
          example: 500
        message:
          type: string
          example: サーバーでエラーが発生しました。
  responses:
    register:
      description: ファイル登録時のレスポンス
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/register"
