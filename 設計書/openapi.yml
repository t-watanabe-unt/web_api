openapi: 3.0.3
info:
  title: Web API document manager - OpenAPI 3.0
  description: |
    -  文書管理APIエンドポイント
        -  文書と文書属性の登録
        -  文書属性による文書の検索
            以下の検索条件を組み合わせて検索するものとする
            結果に文書ファイルは含まず文書属性を返す
              -  指定したキーと値の一致
              -  指定したキーの値が指定した値の範囲に含まれるか
        -  文書の更新
        -  文書属性の更新
        -  文書の取得
        -  文書の削除
    -  文書ファイルは1ファイルあたり最大1GBまでのPDF/Word/Excel/Image/Videoとする
    -  Webアプリケーションが使用できるメモリ量は100MBまでとする
    -  文書の属性は任意のキー(英数字)と値で設定することができる
    -  文書にはそれぞれ一意なキーやURLが割り振られ、外部システムで利用可能であること
    -  当APIは外部へ公開し任意の利用者がいる想定とする

  # termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.00
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
  - url: https://localhost/api/v1/documents/
tags:
  - name: pdf
    description: PDFの新規登録、更新、取得、削除
  - name: word
    description: Wordの新規登録、更新、取得、削除
  - name: image
    description: 画像の新規登録、更新、取得、削除
  - name: video
    description: 動画の新規登録、更新、取得、削除
paths:
  /pdf/register:
    post:
      tags:
        - pdf
      summary: PDFファイルの登録
      description: |
        入力チェック
        - 必須カラムのチェック
        - 未入力チェック
        - mime_typeのチェック
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      operationId: updateDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                optional_key:
                  type: string
                optional_access_value:
                  type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 200
                  contents:
                    type: object
                    properties:
                      doc_num:
                        type: integer
                        example: 1
                      doc_type:
                        type: string
                        example: pdf
                      doc_name:
                        type: string
                        example: specification_api.pdf
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /pdf/search/{access_key}/{document_number}:
    get:
      tags:
        - pdf
      summary: 文書属性(ファイル名、説明文)を取得
      description: |
        入力チェック
        - 必須のチェック
        - アクセスキーが指定のキーもしくは、任意の設定があればその値と一致すること
        - キーが一致していれば、そのキーに合うvalueと照合して一致するか
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: access_key
          schema:
            type: string
          required: true
          description: pdfディレクトリのキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 200
                  doc_num:
                    type: integer
                    example: 1
                  doc_name:
                    type: string
                    example: specification_api.pdf
                  explanation:
                    type: string
                    example: 公開用APIの作成仕様書
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /pdf/{access_key}/{document_number}:
    put:
      tags:
        - pdf
      summary: 文書の更新
      description: |
        入力チェック
        - 必須のチェック
        - アクセスキーが指定のキーもしくは、任意の設定があればその値と一致すること
        - キーが一致していれば、そのキーに合うvalueと照合して一致するか
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: access_key
          schema:
            type: string
          required: true
          description: pdfディレクトリのキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      requestBody:
        description: 更新するファイル
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 200
                  doc_num:
                    type: integer
                    example: 1
                  doc_name:
                    type: string
                    example: specification_api.pdf
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /pdf/attributes/{access_key}/{document_number}:
    patch:
      tags:
        - pdf
      summary: 文書属性の更新
      description: |
        入力チェック
        - 必須のチェック
        - アクセスキーが指定のキーもしくは、任意の設定があればその値と一致すること
        - キーが一致していれば、そのキーに合うvalueと照合して一致するか
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: access_key
          schema:
            type: string
          required: true
          description: pdfディレクトリのキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      requestBody:
        description: 更新するファイル
        content:
          application/json:
            schema:
              type: object
              properties:
                document_name:
                  type: string
                explanation:
                  type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 200
                  doc_num:
                    type: integer
                    example: 1
                  doc_name:
                    type: string
                    example: specification_api.pdf
                  explanation:
                    type: string
                    example: 公開用APIの作成仕様書
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /pdf/download/{access_key}/{document_number}:
    get:
      tags:
        - pdf
      summary: 文書のダウンロード
      description: |
        入力チェック
        - 必須のチェック
        - アクセスキーが指定のキーもしくは、任意の設定があればその値と一致すること
        - キーが一致していれば、そのキーに合うvalueと照合して一致するか
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: access_key
          schema:
            type: string
          required: true
          description: pdfディレクトリのキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
  /pdf/delete/{access_key}/{document_number}:
    delete:
      tags:
        - pdf
      summary: 文書の削除
      description: |
        入力チェック
        - 必須のチェック
        - アクセスキーが指定のキーもしくは、任意の設定があればその値と一致すること
        - キーが一致していれば、そのキーに合うvalueと照合して一致するか
        - 上記チェックから外れた場合は、以下のように返却する

          例)
            - status_code: 400
            - message: 入力値が不正です

        例外処理
        - 例外種類に応じて、Response例の通りに返すこと
        - また、例外が発生した場合はログを残すこと
      parameters:
        - in: path
          name: access_key
          schema:
            type: string
          required: true
          description: pdfディレクトリのキー
        - in: path
          name: document_number
          schema:
            type: integer
          required: true
          description: 文書番号
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 200
                  doc_num:
                    type: integer
                    example: 1
                  doc_name:
                    type: string
                    example: specification_api.pdf
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/400"
        "404":
          description: Documents not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/404"
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/405"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/500"
components:
  schemas:
    400:
      description: Invalid ID supplied
      properties:
        status_code:
          type: integer
          example: 400
        message:
          type: string
          example: 入力値が不正です
    404:
      description: Documents not found
      properties:
        status_code:
          type: integer
          example: 404
        message:
          type: string
          example: アクセス方法を再度確認してください
    405:
      description: Validation exception
      properties:
        status_code:
          type: integer
          example: 405
        message:
          type: string
          example: アクセス方法を再度確認してください
    500:
      description: 500用レスポンス
      properties:
        status_code:
          type: integer
          example: 500
        message:
          type: string
          example: サーバーでエラーが発生しました。
